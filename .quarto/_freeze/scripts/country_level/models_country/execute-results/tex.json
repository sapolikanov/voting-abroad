{
  "hash": "b69a860f9203f49e2529bf70ce4fc5a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Country-level analysis: models\"\nsubtitle: \"Part of the final project for AQMSS II\"\nauthor: \"Polikanov Stepan and Okisheva Vera\"\nformat:\n  pdf:\n    fig-pos: \"H\"\n    fontsize: 11pt\n    highlight-style: kate\n    fig-width: 10\n    fig-height: 10\n    include-in-header:\n      - text: |\n          \\addtokomafont{disposition}{\\rmfamily} \n          \\AddToHook{env/Highlighting/begin}{\\scriptsize} \n          \\usepackage{float} \n          \\usepackage[backend = biber, style = apa]{biblatex}\n          \\addbibresource{project.bib}\nembed-resources: true\nexecute: \n  echo: true\n  warning: false\n  error: false\n  message: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here::here(\"utilities\", \"check_packages.R\"))\nsource(here::here(\"utilities\", \"functions.R\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_country <- read_rds(here(\"data\", \"data_built\", \"data_country.rds\"))\n```\n:::\n\n\n# Aggregated models\n\nWe first run models aggregated to the country-level. This approach has an attractive feature of simplicity and the inability to run out of degrees of freedom. We aggregate to the country- rather than city- or voting station- level because the indicators and variables available to us were either available only at the country-level, are possible to measure only at the country-level (export and import for example) or are comparable only between countries. This means that we may miss some of the between-city variation in the data, however due to selection this is better addressed in the exit-poll sample choice models.\n\n## Selection into conducting exit polls\n\nAs mentioned elsewhere, exit polls are not a representative sample of all voting stations abroad. As initiative that conducted them self-described as founded by \"free people and independent activists from Russia living abroad\". This means that this endeavor is easily labelled within the \"non-systemic opposition\" in Russia by both descriptive signals (civic engagement, control of elections to avoid electoral fraud and simply \"activism\") and scope of operation (WEIRD countries, mostly within OECD and popular Russian tourist or immigration spots such as Vietnam or Kazakhstan).\n\nTo empirically confirm this we run regressions with an outcome denoting whether an exit poll was conducted at a voting station abroad. We relate this to variables that might affect migration choice as well as the baseline number of migrants in the country.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- lm(ep ~ vdem_polyarchy_2022 + log(mad_gdppc_2018) + orthodox_share\n         + log(dist) + log(voters_in_list) + log(mean_trips), data = data_country)\n\nm1.log <- glm(ep ~ vdem_polyarchy_2022 + log(mad_gdppc_2018) + orthodox_share\n              + log(dist) + log(voters_in_list)+ log(mean_trips),\n              data = data_country, family = \"binomial\")\n\nsummary(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = ep ~ vdem_polyarchy_2022 + log(mad_gdppc_2018) + \n    orthodox_share + log(dist) + log(voters_in_list) + log(mean_trips), \n    data = data_country)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.7548 -0.2099  0.0293  0.1848  0.6735 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         -0.292865   0.537066  -0.545   0.5866    \nvdem_polyarchy_2022  0.746300   0.113408   6.581 1.29e-09 ***\nlog(mad_gdppc_2018)  0.022125   0.033887   0.653   0.5151    \northodox_share      -0.178875   0.177499  -1.008   0.3156    \nlog(dist)           -0.090970   0.047854  -1.901   0.0597 .  \nlog(voters_in_list)  0.124133   0.027041   4.590 1.10e-05 ***\nlog(mean_trips)      0.001009   0.011522   0.088   0.9304    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.3014 on 120 degrees of freedom\n  (15 observations deleted due to missingness)\nMultiple R-squared:  0.6022,\tAdjusted R-squared:  0.5823 \nF-statistic: 30.27 on 6 and 120 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(m1.log)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = ep ~ vdem_polyarchy_2022 + log(mad_gdppc_2018) + \n    orthodox_share + log(dist) + log(voters_in_list) + log(mean_trips), \n    family = \"binomial\", data = data_country)\n\nCoefficients:\n                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)         -29.85513   10.39357  -2.872 0.004073 ** \nvdem_polyarchy_2022   8.39480    2.25693   3.720 0.000200 ***\nlog(mad_gdppc_2018)   1.04301    0.58517   1.782 0.074682 .  \northodox_share       -2.21453    1.90451  -1.163 0.244918    \nlog(dist)             0.02696    0.54767   0.049 0.960737    \nlog(voters_in_list)   1.95444    0.54075   3.614 0.000301 ***\nlog(mean_trips)       0.05063    0.12307   0.411 0.680811    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 158.245  on 126  degrees of freedom\nResidual deviance:  47.089  on 120  degrees of freedom\n  (15 observations deleted due to missingness)\nAIC: 61.089\n\nNumber of Fisher Scoring iterations: 8\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_m1.log <- plot(check_model(m1.log))\ncheck_m1.log[[4]] <- check_m1.log[[4]] + theme(axis.text.x = element_text(\n  angle = 45,hjust = 1)\n  )\ncheck_m1.log\n```\n\n::: {.cell-output-display}\n![](models_country_files/figure-pdf/linear models-1.pdf)\n:::\n\n```{.r .cell-code}\nsave(m1.log, file = here(\"scripts\", \"models\", \"m1_log.rds\"))\n```\n:::\n\n\n\n## Vote shares\n\nAs the dependent variables here are vote shares (percent, 0-100 for use of interpretation), we use a linear regression model. We start with the simplest model using our preferred variables. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nm2p <- lm(putin_full ~ orthodox_share + vdem_polyarchy_2022 \n          + log(mad_gdppc_2018) + obl_type + export_share + import_share \n          + friendly_status + help + military_dummy + log(dist) + log(mean_trips), \n          data = data_country)\n\nm2d <- lm(davankov_full ~ orthodox_share + vdem_polyarchy_2022 \n          + log(mad_gdppc_2018) + obl_type + export_share + import_share \n          + friendly_status + help + military_dummy + log(dist) + log(mean_trips), \n          data = data_country)\n\nm2s <- lm(spoiled_full ~ orthodox_share + vdem_polyarchy_2022 \n          + log(mad_gdppc_2018) + obl_type + export_share + import_share \n          + friendly_status + help + military_dummy + log(dist) + log(mean_trips), \n          data = data_country)\n```\n:::\n\n\n```{.r .cell-code}\nresizebox.stargazer(m2p, m2d, m2s,\n                    type = \"latex\", \n                    title = \"Linear models for vote shares\",\n                    tab.height = \"\\\\textheight\", tab.width= \"\\\\textwidth\")\n```\n\n\n% Table created by stargazer v.5.2.3 by Marek Hlavac, Social Policy Institute. E-mail: marek.hlavac at gmail.com\n% Date and time: Thu, May 16, 2024 - 7:25:32 PM\n\\begin{table}[!htbp] \\centering \n  \\caption{Linear models for vote shares} \n  \\label{} \n\\resizebox*{\\textwidth}{\\textheight}{%\n\\begin{tabular}{@{\\extracolsep{5pt}}lccc} \n\\\\[-1.8ex]\\hline \n\\hline \\\\[-1.8ex] \n & \\multicolumn{3}{c}{\\textit{Dependent variable:}} \\\\ \n\\cline{2-4} \n\\\\[-1.8ex] & putin\\_full & davankov\\_full & spoiled\\_full \\\\ \n\\\\[-1.8ex] & (1) & (2) & (3)\\\\ \n\\hline \\\\[-1.8ex] \n orthodox\\_share & 32.482$^{***}$ & $-$22.382$^{***}$ & $-$9.951$^{***}$ \\\\ \n  & (8.433) & (6.535) & (2.281) \\\\ \n  & & & \\\\ \n vdem\\_polyarchy\\_2022 & $-$21.605$^{***}$ & 15.022$^{***}$ & 7.708$^{***}$ \\\\ \n  & (6.843) & (5.303) & (1.851) \\\\ \n  & & & \\\\ \n log(mad\\_gdppc\\_2018) & $-$3.992$^{**}$ & 3.374$^{***}$ & 0.958$^{**}$ \\\\ \n  & (1.612) & (1.249) & (0.436) \\\\ \n  & & & \\\\ \n obl\\_type1 & $-$5.746 & 3.272 & 1.660$^{*}$ \\\\ \n  & (3.471) & (2.689) & (0.939) \\\\ \n  & & & \\\\ \n obl\\_type2 & $-$3.177 & 1.735 & 1.509 \\\\ \n  & (4.463) & (3.459) & (1.207) \\\\ \n  & & & \\\\ \n obl\\_type3 & $-$8.516 & 6.848 & 2.055 \\\\ \n  & (6.017) & (4.662) & (1.627) \\\\ \n  & & & \\\\ \n obl\\_type4 & 2.972 & $-$1.983 & 0.924 \\\\ \n  & (9.438) & (7.313) & (2.552) \\\\ \n  & & & \\\\ \n export\\_share & $-$3.195$^{**}$ & 2.251$^{*}$ & 0.901$^{**}$ \\\\ \n  & (1.472) & (1.140) & (0.398) \\\\ \n  & & & \\\\ \n import\\_share & 1.614 & $-$1.189 & $-$0.492$^{*}$ \\\\ \n  & (1.010) & (0.783) & (0.273) \\\\ \n  & & & \\\\ \n friendly\\_statusUnfriendly & $-$7.973 & 4.735 & 3.463$^{**}$ \\\\ \n  & (6.411) & (4.968) & (1.734) \\\\ \n  & & & \\\\ \n friendly\\_statusFriendly & $-$2.690 & 2.521 & 0.685 \\\\ \n  & (3.133) & (2.428) & (0.847) \\\\ \n  & & & \\\\ \n help & $-$4.335 & 2.510 & 1.991 \\\\ \n  & (4.605) & (3.569) & (1.245) \\\\ \n  & & & \\\\ \n military\\_dummy & 2.270 & $-$1.869 & 0.096 \\\\ \n  & (3.671) & (2.845) & (0.993) \\\\ \n  & & & \\\\ \n log(dist) & $-$2.606 & 2.394 & $-$0.573 \\\\ \n  & (2.512) & (1.946) & (0.679) \\\\ \n  & & & \\\\ \n log(mean\\_trips) & $-$0.736 & 0.552 & 0.166 \\\\ \n  & (0.473) & (0.366) & (0.128) \\\\ \n  & & & \\\\ \n Constant & 148.891$^{***}$ & $-$46.176$^{**}$ & $-$4.777 \\\\ \n  & (26.415) & (20.469) & (7.144) \\\\ \n  & & & \\\\ \n\\hline \\\\[-1.8ex] \nObservations & 125 & 125 & 125 \\\\ \nR$^{2}$ & 0.652 & 0.593 & 0.753 \\\\ \nAdjusted R$^{2}$ & 0.604 & 0.537 & 0.719 \\\\ \nResidual Std. Error (df = 109) & 13.548 & 10.498 & 3.664 \\\\ \nF Statistic (df = 15; 109) & 13.628$^{***}$ & 10.592$^{***}$ & 22.116$^{***}$ \\\\ \n\\hline \n\\hline \\\\[-1.8ex] \n\\textit{Note:}  & \\multicolumn{3}{r}{$^{*}$p$<$0.1; $^{**}$p$<$0.05; $^{***}$p$<$0.01} \\\\ \n\\end{tabular} \n}\n\\end{table} \n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_m2p <- plot(check_model(m2p))\n```\n\n```{.r .cell-code}\ncheck_m2p[[5]] <- check_m2p[[5]] + theme(axis.text.x = element_text(angle = 45,\n                                                                    hjust = 1))\n\n\ncheck_m2d <- plot(check_model(m2d))\n```\n\n```{.r .cell-code}\ncheck_m2d[[5]] <- check_m2d[[5]] + theme(axis.text.x = element_text(angle = 45,\n                                                                    hjust = 1))\n                                                                    \ncheck_m2s <- plot(check_model(m2s))\n```\n\n```{.r .cell-code}\ncheck_m2s[[5]] <- check_m2s[[5]] + theme(axis.text.x = element_text(angle = 45,\n                                                                    hjust = 1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_m2p\n```\n\n::: {.cell-output-display}\n![](models_country_files/figure-pdf/check models plot-1.pdf)\n:::\n\n```{.r .cell-code}\ncheck_m2d \n```\n\n::: {.cell-output-display}\n![](models_country_files/figure-pdf/check models plot-2.pdf)\n:::\n\n```{.r .cell-code}\ncheck_m2s\n```\n\n::: {.cell-output-display}\n![](models_country_files/figure-pdf/check models plot-3.pdf)\n:::\n:::\n",
    "supporting": [
      "models_country_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "\\usepackage{booktabs}\n\\usepackage{longtable}\n\\usepackage{array}\n\\usepackage{multirow}\n\\usepackage{wrapfig}\n\\usepackage{float}\n\\usepackage{colortbl}\n\\usepackage{pdflscape}\n\\usepackage{tabu}\n\\usepackage{threeparttable}\n\\usepackage{threeparttablex}\n\\usepackage[normalem]{ulem}\n\\usepackage{makecell}\n\\usepackage{xcolor}\n"
      ]
    },
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}