{
  "hash": "b1154caa6567008b38b4763b71d1ee64",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Graphs document\"\nsubtitle: \"Final Paper for AQMSS II\"\nauthor: \"Polikanov Stepan and Okisheva Vera\"\nformat:\n  pdf:\n    fig-pos: \"H\"\n    fontsize: 11pt\n    highlight-style: kate\n    fig-width: 10\n    fig-height: 6\n    include-in-header:\n      - text: |\n          \\addtokomafont{disposition}{\\rmfamily} \n          \\AddToHook{env/Highlighting/begin}{\\scriptsize} \n          \\usepackage{float} \nembed-resources: true\nexecute: \n  echo: true\n  warning: false\n  error: false\n  message: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here::here(\"utilities\", \"check_packages.R\"))\nsource(here::here(\"utilities\", \"functions.R\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_country <- read_rds(here(\"data\", \"data_built\", \"data_country.rds\"))\ndata_built <- read_rds(here(\"data\", \"data_built\", \"data_built_.rds\"))\nep_raw <- read_rds(here(\"data\", \"data_built\", \"ep_raw_dep.rds\"))\nworld <- ne_countries(scale = \"medium\", returnclass = \"sf\") |> \n  mutate(countrycode_c = countrycode(as.numeric(iso_n3_eh), origin = \"iso3n\",\n                                     destination = \"iso3c\"))\nload(here(\"data\", \"data_raw\", \"imp1.RData\"))\nload(here(\"scripts\", \"models\", \"m1_log.rds\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_figure1 <- data_country |>\n  full_join(world, by = \"countrycode_c\") |>\n  st_as_sf() |> \n  mutate(putin_bins = cut(putin_full, c(0, 25, 50, 75, 100)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_table1 <- ep_raw |> \n  select(`Vote Choice` = vote, \n         `Gender` = sex, \n         `Age bin` = age_bin, \n         `Time living out of Russia` = out_of_Russia_time, \n         `Time took to get to the voting station` = time_to_vs,\n         `Time took to get to the voting station: less than hour` =\n           time_to_vs.less_than_hour, \n         `Time took to get to the voting station: more than 4 hours`  =\n           time_to_vs.more_than_4hours, \n         `Trust in the election result` = result_trust, \n         `Binary trust in the election result` = result_trust_bin) |> \n  mutate(across(everything(), ~ if_else(is.na(.), \"No Data\", .)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_table2 <- data_country |> \n  ungroup() |> \n  transmute(`Share of Orthodox Christians, 2011` = orthodox_share, \n         `VDem Polyarchy, 2022` = vdem_polyarchy_2022,\n         `BMR Democracy, 2020` = factor(bmr_dem_2020,\n                                        levels = 0:1,\n                                        labels = c(\"Not a democracy\", \n                                                   \"Democracy\"), exclude = NULL),\n         `Maddison project GDPpc, 2018` = mad_gdppc_2018,\n         `WDI GDPpc, 2020` = wdi_gdpcapcon2015_2022,\n         `Level of military obligations, 2018` = \n           factor(obl_type, levels = 0:4, \n                  labels = c(\"None\",\n                             \"One type of treaty signed\",\n                             \"Two types of treaties signed\",\n                             \"Three types of treaties signed\",\n                             \"All types of treaties (Nonaggression, Consultations, Neutrality, Defense obligations) signed\"), exclude = NULL),\n         `Share of exports to country, 2022` = export_share,\n         `Share of imports from country, 2022` = import_share,\n         `\"Friendliness\" status` = factor(friendly_status, \n                                          labels = c(\"Neutral\", \"Unfriendly\",\n                                                     \"Friendly\", \"No Data\"),\n                                          exclude = NULL),\n         `Help to Ukraine` = factor(help, levels = 0:1,\n                                   labels = c(\"No\", \"Yes\"), exclude = NULL),\n         `Russian military or PMC presence in country` = \n           factor(military_dummy, levels = 0:1,\n                  labels = c(\"No\", \"Yes\"), exclude = NULL),\n         `Weighted geodesic distance to Russia` = dist,\n         `Mean departures to country, 2010-2022` = mean_trips)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_table4 <- data_built |> \n  transmute(`Share of Orthodox Christians, 2011` = orthodox_share, \n         `VDem Polyarchy, 2022` = vdem_polyarchy_2022,\n         `Maddison project GDPpc, 2018` = mad_gdppc_2018,\n         `WDI GDPpc, 2020` = wdi_gdpcapcon2015_2022,\n         `Share of exports to country, 2022` = export_share,\n         `Share of imports from country, 2022` = import_share,\n         `Weighted geodesic distance to Russia` = dist,\n         `Mean departures to country, 2010-2022` = mean_trips,\n         ep = factor(if_else(is.na(ep), 0, ep), levels = 0:1, labels = c(\"No\", \"Yes\")))\n\ndatasummary_balance(~ ep, output = \"kableExtra\",\n                    data = data_table4, stars = T,\n                    dinm_statistic = \"p.value\") |> \n  kable_styling(latex_options = c(\"scale_down\", \"hold_position\"))\n```\n\n::: {.cell-output-display}\n\\begin{table}[!h]\n\\centering\\centering\n\\resizebox{\\ifdim\\width>\\linewidth\\linewidth\\else\\width\\fi}{!}{\n\\begin{tabular}[t]{lrrrrrr}\n\\toprule\n\\multicolumn{1}{c}{ } & \\multicolumn{2}{c}{No (N=180)} & \\multicolumn{2}{c}{Yes (N=65)} & \\multicolumn{2}{c}{ } \\\\\n\\cmidrule(l{3pt}r{3pt}){2-3} \\cmidrule(l{3pt}r{3pt}){4-5}\n  & No (N=180)||||Mean & No (N=180)||||Std. Dev. & Yes (N=65)||||Mean & Yes (N=65)||||Std. Dev. & Diff. in Means & p\\\\\n\\midrule\nShare of Orthodox Christians, 2011 & \\num{0.1} & \\num{0.2} & \\num{0.1} & \\num{0.3} & \\num{0.0} & 0.473\\\\\nVDem Polyarchy, 2022 & \\num{0.4} & \\num{0.2} & \\num{0.7} & \\num{0.2} & \\num{0.3}*** & <0.001\\\\\nMaddison project GDPpc, 2018 & \\num{17324.9} & \\num{18809.5} & \\num{33018.3} & \\num{16350.0} & \\num{15693.3}*** & <0.001\\\\\nWDI GDPpc, 2020 & \\num{11166.6} & \\num{15611.1} & \\num{32617.3} & \\num{24184.7} & \\num{21450.7}*** & <0.001\\\\\nShare of exports to country, 2022 & \\num{1.3} & \\num{2.8} & \\num{1.7} & \\num{2.0} & \\num{0.4} & 0.206\\\\\nShare of imports from country, 2022 & \\num{1.6} & \\num{4.6} & \\num{1.5} & \\num{1.9} & \\num{-0.2} & 0.709\\\\\nWeighted geodesic distance to Russia & \\num{5323.1} & \\num{3180.9} & \\num{3452.4} & \\num{3317.5} & \\num{-1870.7}*** & <0.001\\\\\nMean departures to country, 2010-2022 & \\num{87013.2} & \\num{193322.9} & \\num{180236.9} & \\num{264160.0} & \\num{93223.7}* & 0.011\\\\\n\\bottomrule\n\\end{tabular}}\n\\end{table}\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelplot(m1.log, coef_map = c(\"vdem_polyarchy_2022\" = \"V-Dem Polyarchy\",\n                               \"log(mad_gdppc_2018)\" = \"Log GDPpc\",\n                               \"orthodox_share\" = \"% of Orthodox\",\n                               \"log(dist)\" = \"Log geodesic distance\",\n                               \"log(voters_in_list)\" = \"Log registered voters\",\n                               \"log(mean_trips)\" = \"Log departures to country\"), \n          color = \"#bf212f\")\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-pdf/figure II - balance-1.pdf)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_figure2 <- data_country |> \n  ungroup() |> \n  transmute(`% Orthodox` = orthodox_share, \n            `Polyarchy` = vdem_polyarchy_2022,\n            `Log GDPpc` = log(mad_gdppc_2018),\n            `Share exports` = export_share,\n            `Share imports` = import_share,\n            `Friendly status` = factor(friendly_status),\n            `Help to Ukraine` = factor(help, levels = 0:1,\n                                   labels = c(\"No\", \"Yes\")),\n            `Military` = \n              factor(military_dummy, levels = 0:1,\n                     labels = c(\"No\", \"Yes\")),\n            `Log distance` = log(dist),\n            `Log mean trips` = log(mean_trips),\n            `Conducted Exit Poll` = factor(ep, levels = 0:1, labels = c(\"No\", \"Yes\"))) |> \n  drop_na()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimp1_cmp <- complete(imp1, \"long\", include = T) |> \n  mutate(imputed = factor(if_else(`.imp` > 0, 1, 0), \n                          labels = c(\"Observed\", \"Average Imputed\")),\n         imp = factor(if_else(`.imp` == 0, \"Observed\", as.character(`.imp`)))) |> \n  filter(!countryname_en %in% c(\"Australia\", \"New Zealand\"))\n\ndata_figure3 <- imp1_cmp |> \n  group_by(imp) |> \n  summarize(across(c(sex, age_bin, out_of_Russia_time, \n                     time_to_vs.less_than_hour, time_to_vs.more_than_4hours, \n                     result_trust_bin), ~ sum(is.na(.)))) |> \n  select(-imp) |> \n  distinct() |> \n  rownames_to_column() |> \n  pivot_longer(cols = c(-rowname)) |> \n  mutate(name = factor(name, \n                        levels = c(\"sex\", \"age_bin\", \"out_of_Russia_time\", \n                                   \"time_to_vs.less_than_hour\",\n                                   \"time_to_vs.more_than_4hours\", \n                                   \"result_trust_bin\"),\n                        labels = c(\"Gender\", \"Age\", \"Time out of Russia\",\n                                   \"Time to voting station < 1 hour\",\n                                   \"Time to voting station > 4 hours\",\n                                   \"Trust in the result\")),\n         rowname = factor(rowname, levels = c(1, 2), labels = c(\"Imputed\",\n                                                                \"Observed\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_figure4 <- data_country |> \n  ungroup() |> \n  mutate(bmr_dem_2020 = factor(bmr_dem_2020,\n                                        levels = 0:1,\n                                        labels = c(\"No\", \n                                                   \"Yes\"), exclude = NULL),\n         obl_type = factor(obl_type, levels = 0:4, \n                  labels = c(\"None\",\n                             \"One\",\n                             \"Two\",\n                             \"Three\",\n                             \"All\"), exclude = NULL),\n         friendly_status = factor(friendly_status),\n         help = factor(help, levels = 0:1,\n                                   labels = c(\"No\", \"Yes\"), exclude = NULL),\n         military_dummy = \n           factor(military_dummy, levels = 0:1,\n                  labels = c(\"No\", \"Yes\"), exclude = NULL))\n  \n  labelled::var_label(data_figure4) <- list(\n    bmr_dem_2020 = \"BMR\",\n    obl_type = \"Oblig\",\n    friendly_status = \"Status\",\n    help = \"Help\",\n    military_dummy = \"Mil\",\n    orthodox_share = \"Orth\",\n    vdem_polyarchy_2022 = \"VDem\",\n    mad_gdppc_2018 = \"Mad\",\n    wdi_gdpcapcon2015_2022 = \"WDI\",\n    export_share = \"Exp\",\n    import_share = \"Imp\",\n    dist = \"Dist\",\n    mean_trips = \"Trips\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsave.image(file = here(\"paper\", \"graphs_figures.RData\"))\n```\n:::\n",
    "supporting": [
      "graphs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "\\usepackage{booktabs}\n\\usepackage{longtable}\n\\usepackage{array}\n\\usepackage{multirow}\n\\usepackage{wrapfig}\n\\usepackage{float}\n\\usepackage{colortbl}\n\\usepackage{pdflscape}\n\\usepackage{tabu}\n\\usepackage{threeparttable}\n\\usepackage{threeparttablex}\n\\usepackage[normalem]{ulem}\n\\usepackage{makecell}\n\\usepackage{xcolor}\n\\usepackage{siunitx}\n\n  \\newcolumntype{d}{S[\n    input-open-uncertainty=,\n    input-close-uncertainty=,\n    parse-numbers = false,\n    table-align-text-pre=false,\n    table-align-text-post=false\n  ]}\n  \n"
      ]
    },
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}