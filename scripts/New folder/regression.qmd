---
title: "Regression Analysis of 2024 Russian presidential election abroad"
author: "Polikanov Stepan"
project:
     execute-dir: project
format:
  pdf:
    code_download: true
    fontsize: 11pt
    highlight-style: kate
    fig-width: 10
    fig-height: 6
    include-in-header:
      - text: |
          \addtokomafont{disposition}{\rmfamily} 
          \AddToHook{env/Highlighting/begin}{\scriptsize} 
          \usepackage{float} 
embed-resources: true
execute: 
  echo: true
  warning: false
  error: false
  message: false
---

```{r}
#| label: setup

# Manage packages

  ## Package list
  packages <- c("readxl", "tidyverse", "lubridate", "lme4", "summarytools",
                "nnet", "reshape2", "stargazer")
  
  ## Install packages not yet installed
  installed_packages <- packages %in% rownames(installed.packages())
  if (any(installed_packages == FALSE)) {
    install.packages(packages[!installed_packages])
  }
  
  ## Load packages
  invisible(lapply(packages, library, character.only = TRUE))
  
  
  # Set options
options(scipen = 999)

# Define global functions

  ## Fitting stargazer onto the page
  resizebox.stargazer = function(..., tab.width = "!", tab.height = "!")
      {
    require(stringr) 
    res = capture.output(stargazer::stargazer(...))
    tab.width = tab.width
    tab.height = tab.height
    res = prepend(res, "}", before = length(res))
  
    res = c(res[1:str_which(res, "^\\\\begin\\{tabular\\}.*")-1],
        paste0("\\resizebox*{",tab.width,"}{",tab.height,"}{%"),
        res[str_which(res, "^\\\\begin\\{tabular\\}.*"):length(res)]
        )
    cat(res, sep = "\n")
  }
```

```{r}
#| label: exit poll data prep

# Load translation and data prep for raw data
library(here)
source(here("scripts", "raw_data_prep.R"))
```

```{r}
#| label: data

# Data
  
  ## exit poll 18-03-24 11:21 CET
  # ep <- read_excel("data/exitpoll_18-03-24_11-21CET.xlsx")
  ep <- read_excel(here("data", "exitpoll_18-03-24_20-29CET.xlsx"), sheet = 2)
  
  ## exit poll raw data
  #ep_raw <- read_excel(here("data", "exitpoll_rawdata.xlsx"), 
                     #  sheet = 4, guess_max = 69262)

  ## yandex search data
  yandex_weekly <- read_csv(here("data", "df_countries_weekly.csv"))
  
  ## old
  bilat_migration <- read_csv(here("data", "bilat_mig_sex.csv"))
  
  ## official election results
  # off_res <- read_tsv(here("results-uik-20240318T1503UTC.tsv")
```

```{r}
#| label: releveling and deleting stuff

ep_raw_regready <- ep_raw_clean |> 
  filter(vote %in% c("Putin", "Declined to answer", "Davankov", "Spoiled ballot"),
         sex != "Declined to answer",
         age_bin != "Declined to answer",
         out_of_Russia_time != "< 2 years", out_of_Russia_time != "6 - 10 years", 
         time_to_vs != "> 2 hours", 
         countryname_en != "Australia", countryname_en != "New Zealand") |> 
  mutate(vote = relevel(as.factor(vote), ref = "Putin"),
         sex = relevel(as.factor(sex), ref = "Male"),
         age_bin = relevel(as.factor(age_bin), ref = "25-44"),
         out_of_Russia_time = relevel(as.factor(out_of_Russia_time), ref = "6 months - 2 years"),
         time_to_vs = relevel(as.factor(time_to_vs), ref = "<30 minutes"))

```

```{r}
#| results: asis

m1 <- multinom(vote ~ time_to_vs + out_of_Russia_time + result_trust + age_bin + sex, 
         data = ep_raw_regready)

m2 <- multinom(vote ~ time_to_vs + out_of_Russia_time + result_trust + age_bin + sex + as.factor(city_en), 
         data = ep_raw_regready)

resizebox.stargazer(m1, m2, tab.height = "\\textheight", tab.width= "\\textwidth", omit = "factor")
```

